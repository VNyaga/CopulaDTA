#  		cores = 3)
## ------------------------------------------------------------------------
print(brma.1, pars=c('MUse', 'MUsp', 'mu', 'rho'), digits=4, prob=c(0.025, 0.975))
## ---- fig.show='hide'----------------------------------------------------
f1.1 <- traceplot(fitgauss.1)
f1.2 <- traceplot(fitc90.1)
f1.3 <- traceplot(fitc270.1)
f1.4 <- traceplot(fitfgm.1)
f1.5 <- traceplot(fitfrank.1)
f1.6 <- stan_trace(brma.1, pars=c('MUse', 'MUsp'))
## ---- fig.width=8, fig.height=5------------------------------------------
library(Rmisc)
multiplot(f1.1$plot, f1.2$plot, f1.3$plot, f1.4$plot, f1.5$plot, f1.6, cols=2)
f1.6 <- stan_trace(brma.1, pars=c('MU'))
stan_trace(brma.1, pars=c('MU'))
traceplot(fitgauss.1)
install.packages("bayesplot")
rm(list=ls())
library(devtools)
library(roxygen2)
session_info()
document()
load_all()
devtools::document()
devtools::check()
## ---- results='hide'-----------------------------------------------------
#install.packages("CopulaDTA", dependencies = TRUE)
library(CopulaDTA)
## ---- eval=FALSE---------------------------------------------------------
#  data(telomerase)
#  telomerase
## ---- echo=FALSE---------------------------------------------------------
telomerase
## ---- eval=FALSE---------------------------------------------------------
#  data(ascus)
#  ascus
## ---- echo=FALSE---------------------------------------------------------
ascus
## ---- echo=FALSE---------------------------------------------------------
library(httr)
mylink <- GET(url="https://www.dropbox.com/s/cd4dtttmnf1y80p/CopulaDTA_002.Rdata?dl=1")
load(rawConnection(mylink$content))
## ------------------------------------------------------------------------
gauss.1 <- cdtamodel("gauss")
## ---- eval=FALSE---------------------------------------------------------
#  str(gauss.1)
## ---- eval=FALSE---------------------------------------------------------
#  fitgauss.1 <- fit(
#  		gauss.1,
#  		data = telomerase,
#  		SID = "ID",
#  		iter = 28000,
#  		warmup = 1000,
#  		thin = 30,
#  		seed = 3)
## ---- fig.width=7--------------------------------------------------------
traceplot(fitgauss.1)
print(fitgauss.1, digits = 4)
## ---- fig.width=7, fig.height=5------------------------------------------
plot(fitgauss.1)
## ---- eval=FALSE---------------------------------------------------------
#  c90.1 <- cdtamodel(copula = "c90")
#
#  fitc90.1 <- fit(c90.1,
#                  data=telomerase,
#                  SID="ID",
#                  iter=28000,
#                  warmup=1000,
#                  thin=30,
#                  seed=718117096)
#
#  c270.1 <- cdtamodel(copula = "c270")
#
#  fitc270.1 <- fit(c270.1,
#                   data=telomerase,
#                   SID="ID",
#                   iter=19000,
#                   warmup=1000,
#                   thin=20,
#                   seed=3)
#
#  fgm.1 <- cdtamodel(copula = "fgm")
#
#  fitfgm.1 <- fit(fgm.1,
#                  data=telomerase,
#                  SID="ID",
#                  iter=19000,
#                  warmup=1000,
#                  thin=20,
#                  seed=3)
#
#
#  frank.1 <- cdtamodel(copula = "frank")
#
#  fitfrank.1 <- fit(frank.1,
#                    data=telomerase,
#                    SID="ID",
#                    iter=19000,
#                    warmup=1000,
#                    thin=20,
#                    seed=1959300748)
#
## ------------------------------------------------------------------------
BRMA1 <- "
data{
int<lower = 0> Ns;
int<lower = 0> tp[Ns];
int<lower = 0>  dis[Ns];
int<lower = 0>  tn[Ns];
int<lower = 0>  nondis[Ns];
}
parameters{
real etarho;
vector[2] mul;
vector<lower = 0>[2] sigma;
vector[2] logitp[Ns];
vector[2] logitphat[Ns];
}
transformed parameters{
vector[Ns] p[2];
vector[Ns] phat[2];
real MU[2];
vector[2] mu;
real rho;
real ktau;
matrix[2,2] Sigma;
rho <- tanh(etarho);
ktau <- (2/pi())*asin(rho);
for (a in 1:2){
for (b in 1:Ns){
p[a][b] <- inv_logit(logitp[b][a]);
phat[a][b] <- inv_logit(logitphat[b][a]);
}
mu[a] <- inv_logit(mul[a]);
}
MU[1] <- mean(phat[1]);
MU[2] <- mean(phat[2]);
Sigma[1, 1] <- sigma[1]^2;
Sigma[1, 2] <- sigma[1]*sigma[2]*rho;
Sigma[2, 1] <- sigma[1]*sigma[2]*rho;
Sigma[2, 2] <- sigma[2]^2;
}
model{
etarho ~ normal(0, 10);
mul ~ normal(0, 10);
sigma ~ cauchy(0, 2.5);
for (i in 1:Ns){
logitp[i] ~ multi_normal(mul, Sigma);
logitphat[i] ~ multi_normal(mul, Sigma);
}
tp ~ binomial(dis,p[1]);
tn ~ binomial(nondis, p[2]);
}
generated quantities{
vector[Ns*2] loglik;
for (i in 1:Ns){
loglik[i] <- binomial_log(tp[i], dis[i], p[1][i]);
}
for (i in (Ns+1):(2*Ns)){
loglik[i] <- binomial_log(tn[i-Ns], nondis[i-Ns], p[2][i-Ns]);
}
}
"
## ------------------------------------------------------------------------
datalist = list(
tp = telomerase$TP,
dis = telomerase$TP + telomerase$FN,
tn = telomerase$TN,
nondis = telomerase$TN + telomerase$FP,
Ns = 10)
## ---- eval=FALSE---------------------------------------------------------
#  brma.1 <- stan(model_code = BRMA1,
#  		data = datalist,
#  		chains = 3,
#  		iter = 5000,
#  		warmup = 1000,
#  		thin = 10,
#  		seed = 3,
#  		cores = 3)
## ------------------------------------------------------------------------
print(brma.1, pars=c('MUse', 'MUsp', 'mu', 'rho'), digits=4, prob=c(0.025, 0.975))
## ---- fig.show='hide'----------------------------------------------------
f1.1 <- traceplot(fitgauss.1)
f1.2 <- traceplot(fitc90.1)
f1.3 <- traceplot(fitc270.1)
f1.4 <- traceplot(fitfgm.1)
f1.5 <- traceplot(fitfrank.1)
f1.6 <- stan_trace(brma.1, pars=c('MUse', 'MUsp'))
## ---- fig.width=8, fig.height=5------------------------------------------
library(Rmisc)
multiplot(f1.1$plot, f1.2$plot, f1.3$plot, f1.4$plot, f1.5$plot, f1.6, cols=2)
rm(list=ls())
library(devtools)
library(roxygen2)
session_info()
document()
load_all()
devtools::document()
devtools::check()
rm(list=ls())
library(devtools)
library(roxygen2)
session_info()
document()
load_all()
devtools::document()
devtools::check()
rm(list=ls())
library(devtools)
library(roxygen2)
session_info()
document()
load_all()
devtools::document()
devtools::check()
rm(list=ls())
library(devtools)
library(roxygen2)
session_info()
document()
load_all()
devtools::document()
devtools::check()
install.packages("pandoc")
rm(list=ls())
setwd('F:/PHD/Projects/CopulaModels/CopulaDTA')
library(devtools)
library(roxygen2)
session_info()
document()
load_all()
devtools::document()
devtools::build()
devtools::check()
rm(list=ls())
setwd('F:/PHD/Projects/CopulaModels/CopulaDTA')
library(devtools)
library(roxygen2)
session_info()
document()
load_all()
devtools::document()
devtools::build()
devtools::check()
library(CopulaDTA)
library(CopulaDTA)
rm(list=ls())
setwd('F:/PHD/Projects/CopulaModels/CopulaDTA')
library(devtools)
library(roxygen2)
session_info()
document()
load_all()
devtools::document()
devtools::build()
devtools::check()
library(CopulaDTA)
library(CopulaDTA)
install.packages("pandoc")
rm(list=ls())
setwd('F:/PHD/Projects/CopulaModels/CopulaDTA')
library(devtools)
library(roxygen2)
session_info()
document()
load_all()
devtools::document()
devtools::build()
unlink('vignettes/CopulaDTA_Vignette_cache', recursive = TRUE)
rm(list=ls())
setwd('F:/PHD/Projects/CopulaModels/CopulaDTA')
library(devtools)
library(roxygen2)
session_info()
document()
load_all()
devtools::document()
devtools::build()
devtools::check()
rm(list=ls())
setwd('F:/PHD/Projects/CopulaModels/CopulaDTA')
library(devtools)
library(roxygen2)
session_info()
document()
load_all()
devtools::document()
devtools::install()
devtools::build_vignettes()
devtools::build()
devtools::check(cran = TRUE)
devtools::release()
hh
devtools::build_win()
devtools::release()
devtools::release()
options(stringsAsFactors = FALSE)
E003 = read.csv('O:/PHD/Projects/E003/Data/Analysis25.csv')
E003 = read.csv('F:/PHD/Projects/E003/Data/Analysis25.csv')
summary(E003)
table(E003$Age1)
table(E003$Risk)
View(E003)
View(E003)
table(E003$Location)
table(E003$Location1)
options(stringsAsFactors = FALSE)
E003 = read.csv('F:/PHD/Projects/E003/Data/Analysis25.csv')
with(E003, table(Age1, Risk))
with(E003, table(Age1, Risk, Location1))
setwd("F:/PHD/Projects/CopulaModels/CopulaDTA")
setwd("F:/PHD/Projects/Metadas/Scripts")
setwd("F:/PHD/Projects/Metaprop_SAS/Scripts")
setwd("F:/PHD/Projects/Metaprop_SAS/Scripts")
275/623
275/667
library(CopulaDTA)
library(httr)
mylink <- GET(url="https://www.dropbox.com/s/cd4dtttmnf1y80p/CopulaDTA_002.Rdata?dl=1")
load(rawConnection(mylink$content))
library(loo)
brma.summary2 <- data.frame(Parameter=c(rep(c("Sensitivity", "Specificity"), times=2), "RSE", "RSP", "Correlation"),
Test=c(rep(c("HC2", "Repc", "Repc"), each=2), "Both"),
summary(brma.2, pars=c('MU', "RR", 'ktau'))$summary[,c(1, 4, 6, 8:10)])
names(brma.summary2)[3:6] <- c("Mean", "Lower", "Median", "Upper")
Table2 <- cbind(Model=rep(c("Gaussian", "C90", "C270", "FGM", "Frank"), each=10),
Test=rep(c("HC2", "Repc"), length.out=50),
rbind(summary(fitgauss.2)$Summary,
summary(fitc90.2)$Summary,
summary(fitc270.2)$Summary,
summary(fitfgm.2)$Summary,
summary(fitfrank.2)$Summary),
WAIC = t(data.frame(rep(c(summary(fitgauss.2)$WAIC[1],
summary(fitc90.2)$WAIC[1],
summary(fitc270.2)$WAIC[1],
summary(fitfgm.2)$WAIC[1],
summary(fitfrank.2)$WAIC[1]), each=10))))
Table2$Parameter <- rep(rep(c("Sensitivity", "Specificity", "RSE", "RSP", "Correlation"), each=2), times=5)
Table2 <- rbind(Table2, cbind(Model=rep("BRMA", 7),
brma.summary2,
WAIC=t(data.frame(rep(loo::waic(extract_log_lik(brma.2, parameter_name="loglik"))[3], 7)))))
rownames(Table2) <- NULL
print(Table2[Table2$Parameter=="Correlation",], digits=4)
windows()
ggplot(Table2[Table2$Parameter %in% c("RSE", "RSP") & (Table2$Test == "Repc") ,],
aes(x=Model, y= Mean, ymax=1.5)) +
geom_point(size=3) +
theme_bw() +
coord_flip() +
facet_grid(~ Parameter, switch="x") +
geom_errorbar(aes(ymin=Lower, ymax=Upper),size=.75, width=0.15) +
geom_hline(aes(yintercept = 1),
linetype = "longdash",
colour="blue") +
theme(axis.text.x = element_text(size=13),
axis.text.y = element_text(size=13),
axis.title.x = element_text(size=13),
strip.text = element_text(size = 13),
axis.title.y= element_text(size=13, angle=0),
strip.text.y = element_text(size = 13, colour='black'),
strip.text.x = element_text(size = 13, colour='black'),
panel.grid.major = element_blank(),
panel.background = element_blank(),
plot.background = element_rect(fill = "white", colour='white')) +
scale_y_continuous(name="Mean [95% equal-tailed credible intervals]",
limits=c(0.5, 2))
g2 <- ggplot(Table2[Table2$Parameter %in% c("RSE", "RSP") & (Table2$Test == "Repc") ,],
aes(x=Model, y= Mean, ymax=1.5)) +
geom_point(size=3) +
theme_bw() +
coord_flip() +
facet_grid(~ Parameter, switch="x") +
geom_errorbar(aes(ymin=Lower, ymax=Upper),size=.75, width=0.15) +
geom_hline(aes(yintercept = 1),
linetype = "longdash",
colour="blue") +
theme(axis.text.x = element_text(size=13),
axis.text.y = element_text(size=13),
axis.title.x = element_text(size=13),
strip.text = element_text(size = 13),
axis.title.y= element_text(size=13, angle=0),
strip.text.y = element_text(size = 13, colour='black'),
strip.text.x = element_text(size = 13, colour='black'),
panel.grid.major = element_blank(),
panel.background = element_blank(),
plot.background = element_rect(fill = "white", colour='white')) +
scale_y_continuous(name="Mean [95% equal-tailed credible intervals]",
limits=c(0.5, 2))
g2
windows()
g2
Table2$Mean <- 1/Table2$Mean
g2 <- ggplot(Table2[Table2$Parameter %in% c("RSE", "RSP") & (Table2$Test == "Repc") ,],
aes(x=Model, y= Mean, ymax=1.5)) +
geom_point(size=3) +
theme_bw() +
coord_flip() +
facet_grid(~ Parameter, switch="x") +
geom_errorbar(aes(ymin=Lower, ymax=Upper),size=.75, width=0.15) +
geom_hline(aes(yintercept = 1),
linetype = "longdash",
colour="blue") +
theme(axis.text.x = element_text(size=13),
axis.text.y = element_text(size=13),
axis.title.x = element_text(size=13),
strip.text = element_text(size = 13),
axis.title.y= element_text(size=13, angle=0),
strip.text.y = element_text(size = 13, colour='black'),
strip.text.x = element_text(size = 13, colour='black'),
panel.grid.major = element_blank(),
panel.background = element_blank(),
plot.background = element_rect(fill = "white", colour='white')) +
scale_y_continuous(name="Mean [95% equal-tailed credible intervals]",
limits=c(0.5, 2))
g2
Table2$Mean <- 1/Table2$Mean
Table2$Lower <- 1/Table2$Lower
Table2$Upper <- 1/Table2$Upper
g2 <- ggplot(Table2[Table2$Parameter %in% c("RSE", "RSP") & (Table2$Test == "Repc") ,],
aes(x=Model, y= Mean, ymax=1.5)) +
geom_point(size=3) +
theme_bw() +
coord_flip() +
facet_grid(~ Parameter, switch="x") +
geom_errorbar(aes(ymin=Lower, ymax=Upper),size=.75, width=0.15) +
geom_hline(aes(yintercept = 1),
linetype = "longdash",
colour="blue") +
theme(axis.text.x = element_text(size=13),
axis.text.y = element_text(size=13),
axis.title.x = element_text(size=13),
strip.text = element_text(size = 13),
axis.title.y= element_text(size=13, angle=0),
strip.text.y = element_text(size = 13, colour='black'),
strip.text.x = element_text(size = 13, colour='black'),
panel.grid.major = element_blank(),
panel.background = element_blank(),
plot.background = element_rect(fill = "white", colour='white')) +
scale_y_continuous(name="Mean [95% equal-tailed credible intervals]",
limits=c(0.5, 2))
g2
Table2 <- cbind(Model=rep(c("Gaussian", "C90", "C270", "FGM", "Frank"), each=10),
Test=rep(c("HC2", "Repc"), length.out=50),
rbind(summary(fitgauss.2)$Summary,
summary(fitc90.2)$Summary,
summary(fitc270.2)$Summary,
summary(fitfgm.2)$Summary,
summary(fitfrank.2)$Summary),
WAIC = t(data.frame(rep(c(summary(fitgauss.2)$WAIC[1],
summary(fitc90.2)$WAIC[1],
summary(fitc270.2)$WAIC[1],
summary(fitfgm.2)$WAIC[1],
summary(fitfrank.2)$WAIC[1]), each=10))))
Table2$Parameter <- rep(rep(c("Sensitivity", "Specificity", "RSE", "RSP", "Correlation"), each=2), times=5)
Table2 <- rbind(Table2, cbind(Model=rep("BRMA", 7),
brma.summary2,
WAIC=t(data.frame(rep(loo::waic(extract_log_lik(brma.2, parameter_name="loglik"))[3], 7)))))
rownames(Table2) <- NULL
Table2$Mean <- 1/Table2$Mean
Table2$Lower <- 1/Table2$Lower
Table2$Upper <- 1/Table2$Upper
g2 <- ggplot(Table2[Table2$Parameter %in% c("RSE", "RSP") & (Table2$Test == "Repc") ,],
aes(x=Model, y= Mean, ymax=1.5)) +
geom_point(size=3) +
theme_bw() +
coord_flip() +
facet_grid(~ Parameter, switch="x") +
geom_errorbar(aes(ymin=Lower, ymax=Upper),size=.75, width=0.15) +
geom_hline(aes(yintercept = 1),
linetype = "longdash",
colour="blue") +
theme(axis.text.x = element_text(size=13),
axis.text.y = element_text(size=13),
axis.title.x = element_text(size=13),
strip.text = element_text(size = 13),
axis.title.y= element_text(size=13, angle=0),
strip.text.y = element_text(size = 13, colour='black'),
strip.text.x = element_text(size = 13, colour='black'),
panel.grid.major = element_blank(),
panel.background = element_blank(),
plot.background = element_rect(fill = "white", colour='white')) +
scale_y_continuous(name="Mean [95% equal-tailed credible intervals]",
limits=c(0.5, 2))
g2
g2 <- ggplot(Table2[Table2$Parameter %in% c("RSE", "RSP") & (Table2$Test == "Repc") ,],
aes(x=Model, y= Mean, ymax=1.5)) +
geom_point(size=3) +
theme_bw() +
coord_flip() +
facet_grid(~ Parameter, switch="x") +
geom_errorbar(aes(ymin=Lower, ymax=Upper),size=.75, width=0.15) +
geom_hline(aes(yintercept = 1),
linetype = "longdash",
colour="blue") +
theme(axis.text.x = element_text(size=13, colour='black'),
axis.text.y = element_text(size=13, colour='black'),
axis.title.x = element_text(size=13),
strip.text = element_text(size = 13),
axis.title.y= element_text(size=13, angle=0),
strip.text.y = element_text(size = 13, colour='black'),
strip.text.x = element_text(size = 13, colour='black'),
panel.grid.major = element_blank(),
panel.background = element_blank(),
plot.background = element_rect(fill = "white", colour='white')) +
scale_y_continuous(name="Mean [95% equal-tailed credible intervals]",
limits=c(0.5, 2))
g2
windows()
g2
library(CopulaDTA)
load("F:/PHD/Projects/CopulaModels/CopulaDTA/data/telomerase.rda")
View(telomerase)
